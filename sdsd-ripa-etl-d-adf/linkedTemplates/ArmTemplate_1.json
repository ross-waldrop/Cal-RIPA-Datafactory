{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "sdsd-ripa-etl-d-adf"
		},
		"Daily Run_properties_PL_SOURCE_2_AAS_parameters_EnableNotifications": {
			"type": "string",
			"defaultValue": "true"
		},
		"Daily Run_properties_PL_SOURCE_2_AAS_parameters_SendEmailNotificationAddress": {
			"type": "string",
			"defaultValue": "CssaRipaPbiSupport@sdsheriff.gov"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_PROCESS_AAS_RIPAMODEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ACT_ITRC_FOR_EACH_TABLE",
						"description": "Iterate through each item and perform the copy ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ACT_GEN_LKP_LOGIC_APP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ACT_GEN_LKP_LOGIC_APP').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ACT_GEN_EPIPE_ERR_NOTIFY_1",
									"description": "Notify admins that the web activity failed",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "ACT_GEN_WEB_PROCESS_AAS_PNLMODEL",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_LOGMSG_AND_SENDEMAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"IsError": true,
											"EmailTo": {
												"value": "@pipeline().parameters.SendEmailNotificationAddress",
												"type": "Expression"
											},
											"Subject": {
												"value": "@concat('FAILURE - ' , pipeline().Pipeline)",
												"type": "Expression"
											},
											"Message": {
												"value": "@concat('error code:',\nactivity('ACT_GEN_WEB_PROCESS_AAS_PNLMODEL').output.error.errorCode\n, ' - Message: ',\nactivity('ACT_GEN_WEB_PROCESS_AAS_PNLMODEL').output.error.message\n)",
												"type": "Expression"
											},
											"Importance": "High",
											"EmailEnabled": {
												"value": "@pipeline().parameters.EnableNotifications",
												"type": "Expression"
											},
											"PipelineName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"PipelineRunID": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"DataFactoryName": {
												"value": "@pipeline().DataFactory",
												"type": "Expression"
											},
											"Etl_DB_Conn_Secret": "N/A",
											"Color": "Red"
										}
									}
								},
								{
									"name": "ACT_GEN_EPIPE_SUCCESS_NOTIFY_1",
									"description": "email success notification",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "ACT_GEN_SPRC_LOG_PL_END",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_LOGMSG_AND_SENDEMAIL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"IsError": false,
											"EmailTo": {
												"value": "@pipeline().parameters.SendEmailNotificationAddress",
												"type": "Expression"
											},
											"Subject": {
												"value": "@concat('SUCCESS - ', pipeline().Pipeline)",
												"type": "Expression"
											},
											"Message": {
												"value": "AAS Process complete",
												"type": "Expression"
											},
											"Importance": "Low",
											"EmailEnabled": {
												"value": "@pipeline().parameters.EnableNotifications",
												"type": "Expression"
											},
											"PipelineName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"PipelineRunID": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"DataFactoryName": {
												"value": "@pipeline().DataFactory",
												"type": "Expression"
											},
											"Color": "Green"
										}
									}
								},
								{
									"name": "ACT_GEN_SPRC_LOG_ITEM_START",
									"description": "start process aas pipeline",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
										"storedProcedureParameters": {
											"CallingProcess": {
												"value": "Start of PROCESS_AAS",
												"type": "String"
											},
											"DataFactoryName": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExecutionMessage": {
												"value": "Started processing AAS",
												"type": "String"
											},
											"IsEnd": {
												"value": "false",
												"type": "Boolean"
											},
											"IsError": {
												"value": "false",
												"type": "Boolean"
											},
											"IsStart": {
												"value": "true",
												"type": "Boolean"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerID": {
												"value": {
													"value": "@pipeline().TriggerId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineTriggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableName": {
												"value": "N/A",
												"type": "String"
											},
											"TableSchema": {
												"value": "N/A",
												"type": "String"
											},
											"IsInnerActivity": {
												"value": "false",
												"type": "Boolean"
											},
											"RowsCopied": {
												"value": "0",
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_SQL_AUTH",
										"type": "LinkedServiceReference",
										"parameters": {
											"LS_ASQL_SQL_AUTH_CONN_SECRET": "sec-mdw-db-connection-string"
										}
									}
								},
								{
									"name": "ACT_GEN_SPRC_LOG_PL_END",
									"description": "end of aas processing",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ACT_GEN_WEB_PROCESS_AAS_PNLMODEL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
										"storedProcedureParameters": {
											"CallingProcess": {
												"value": "End of PL_PROCESS_AAS",
												"type": "String"
											},
											"DataFactoryName": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExecutionMessage": {
												"value": "Finished processing AAS",
												"type": "String"
											},
											"IsEnd": {
												"value": "true",
												"type": "Boolean"
											},
											"IsError": {
												"value": "false",
												"type": "Boolean"
											},
											"IsStart": {
												"value": "false",
												"type": "Boolean"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerID": {
												"value": {
													"value": "@pipeline().TriggerId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineTriggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableName": {
												"value": "N/A",
												"type": "String"
											},
											"TableSchema": {
												"value": "N/A",
												"type": "String"
											},
											"IsInnerActivity": {
												"value": "false",
												"type": "Boolean"
											},
											"RowsCopied": {
												"value": "0",
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_SQL_AUTH",
										"type": "LinkedServiceReference",
										"parameters": {
											"LS_ASQL_SQL_AUTH_CONN_SECRET": "sec-mdw-db-connection-string"
										}
									}
								},
								{
									"name": "ACT_GEN_WEB_PROCESS_AAS_PNLMODEL",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "ACT_GEN_SPRC_LOG_ITEM_START",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@item().LogicAppURL",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {},
										"body": {
											"message": "process aas"
										}
									}
								},
								{
									"name": "ACT_GEN_SET_VAR_ERR_FLG",
									"description": "set error_flag variable to true",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ACT_GEN_EPIPE_ERR_NOTIFY_1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ERROR_FLG",
										"value": "true"
									}
								}
							]
						}
					},
					{
						"name": "ACT_GEN_LKP_LOGIC_APP",
						"description": "Lookup the tables to move from adls to asql in our metadata table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SPRC_LOG_PL_START",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from adf.LogicAppURL where logicAppType = 'processcube'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_SQL_AUTH",
								"type": "DatasetReference",
								"parameters": {
									"DS_ASQL_SQL_AUTH_CONN_SECRET": {
										"value": "sec-mdw-db-connection-string",
										"type": "Expression"
									},
									"DS_DB_SCHEMA_NAME": {
										"value": "adf",
										"type": "Expression"
									},
									"DS_DB_TABLE_NAME": "LogicAppURL"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACT_GEN_SPRC_LOG_PL_START",
						"description": "start mdw_2_asql pipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
							"storedProcedureParameters": {
								"CallingProcess": {
									"value": "Start of cube Processing",
									"type": "String"
								},
								"DataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionMessage": {
									"value": "Started copying data from ADLS to ASQL",
									"type": "String"
								},
								"IsEnd": {
									"value": "false",
									"type": "Boolean"
								},
								"IsError": {
									"value": "false",
									"type": "Boolean"
								},
								"IsStart": {
									"value": "true",
									"type": "Boolean"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerID": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": "N/A",
									"type": "String"
								},
								"TableSchema": {
									"value": "N/A",
									"type": "String"
								},
								"IsInnerActivity": {
									"value": "false",
									"type": "Boolean"
								},
								"RowsCopied": {
									"value": "0",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_SQL_AUTH",
							"type": "LinkedServiceReference",
							"parameters": {
								"LS_ASQL_SQL_AUTH_CONN_SECRET": "sec-mdw-db-connection-string"
							}
						}
					},
					{
						"name": "ACT_EXECUTE_CREATE_XMLA_FILE",
						"description": "This activity will execute a Databricks notebook that will create a XMLA file for the Security-Readers role in the AAS ripamodel",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ACT_ITRC_FOR_EACH_TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/data_engineering/AAS/create_xmla_file"
						},
						"linkedServiceName": {
							"referenceName": "LS_ADB_SPARK_CLUSTER",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ACT_CALL_RUN_AAS_SEC_READERS_WEBHOOK",
						"description": "This webhook call will run the Run_AAS_Sec_Readers (sdsd-ripa-etl-d-aaa/Run_AAS_Sec_Readers) runbook (powershell script) which will execute the created XMLA file.",
						"type": "WebHook",
						"dependsOn": [
							{
								"activity": "ACT_EXECUTE_CREATE_XMLA_FILE",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACT_SET_WEBHOOK_VARIABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@variables('AAS_SEC_READERS_WEBHOOK')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {},
							"body": {
								"message": "Execute Run_AAS_Sec_Readers"
							},
							"timeout": "00:10:00",
							"reportStatusOnCallBack": true
						}
					},
					{
						"name": "ACT_GEN_LKP_RUN_AAS_SEC_READERS_WEBHOOK",
						"description": "Lookup Webhook from adf.LogicAppURL table.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from adf.LogicAppURL where logicAppType = 'AAS_Sec_Readers'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_SQL_AUTH",
								"type": "DatasetReference",
								"parameters": {
									"DS_ASQL_SQL_AUTH_CONN_SECRET": "sec-mdw-db-connection-string",
									"DS_DB_SCHEMA_NAME": "adf",
									"DS_DB_TABLE_NAME": "LogicAppURL"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "ACT_SET_WEBHOOK_VARIABLE",
						"description": "Assign webhook url to variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_LKP_RUN_AAS_SEC_READERS_WEBHOOK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "AAS_SEC_READERS_WEBHOOK",
							"value": {
								"value": "@activity('ACT_GEN_LKP_RUN_AAS_SEC_READERS_WEBHOOK').output.firstRow.LogicAppUrl",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"EnableNotifications": {
						"type": "string",
						"defaultValue": "true"
					},
					"SendEmailNotificationAddress": {
						"type": "string",
						"defaultValue": "Troy.Peckman@sdsheriff.gov"
					}
				},
				"variables": {
					"ERROR_FLG": {
						"type": "String"
					},
					"AAS_SEC_READERS_WEBHOOK": {
						"type": "String"
					}
				},
				"folder": {
					"name": "500_PROCESS_AAS"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-27T17:03:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_RAW_2_STAGE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "run the correct dbr notebooks to promote raw data to staget data",
				"activities": [
					{
						"name": "ACT_GEN_LKP_TABLES",
						"description": "Lookup the raw2stage notebooks using the auditing metadatatable",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SPRC_LOG_PL_START",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from adf.DataSource where Raw2stage = 1 AND datasourcetype NOT LIKE 'cosmosdb'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_SQL_AUTH",
								"type": "DatasetReference",
								"parameters": {
									"DS_ASQL_SQL_AUTH_CONN_SECRET": {
										"value": "@variables('ETL_ASQL_CONN_SEC')",
										"type": "Expression"
									},
									"DS_DB_SCHEMA_NAME": {
										"value": "admin",
										"type": "Expression"
									},
									"DS_DB_TABLE_NAME": "DataSource"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACT_ITRC_FOR_EACH_TABLE",
						"description": "Iterate through each item and perform the copy ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ACT_GEN_LKP_TABLES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ACT_GEN_LKP_TABLES').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 8,
							"activities": [
								{
									"name": "ACT_ADB_NB_RAW2STAGE",
									"description": "Run RAW2STAGE notebook",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "ACT_WAIT",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "1.10:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@{pipeline().parameters.NotebookPath}\n",
											"type": "Expression"
										},
										"baseParameters": {
											"deltatable_path": {
												"value": "/@{item().DataLakePath}/@{item().DatabaseTableName}.delta",
												"type": "Expression"
											},
											"isincremental": {
												"value": "@if(equals(item().IsIncremental, True), '1', '0')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ADB_SPARK_CLUSTER",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "ACT_GEN_SET_VAR_ERR_FLG_3",
									"description": "set error_flag variable to true",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ACT_GEN_EPIPE_ERR_NOTIFY_3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "IS_ERROR",
										"value": true
									}
								},
								{
									"name": "ACT_GEN_EPIPE_ERR_NOTIFY_3",
									"description": "Notify admins raw2stage nb failed",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "ACT_ADB_NB_RAW2STAGE",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_LOGMSG_AND_SENDEMAIL_ITEM",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"IsError": true,
											"EmailTo": {
												"value": "@pipeline().parameters.SendEmailNotificationAddress",
												"type": "Expression"
											},
											"Subject": {
												"value": "@concat('FAILURE: Notebook Failure -  ', pipeline().Pipeline, ' ',item().datasourcename, '.', item().databasetablename)",
												"type": "Expression"
											},
											"Message": {
												"value": "@concat('Notebook - ', pipeline().parameters.NotebookPath,   item().datasourcename, '/', item().databasetablename, ' Error Code:', activity('ACT_ADB_NB_RAW2STAGE').error.errorCode, ' - Message:', activity('ACT_ADB_NB_RAW2STAGE').error.message)",
												"type": "Expression"
											},
											"Importance": "High",
											"EmailEnabled": {
												"value": "@pipeline().parameters.EnableNotifications",
												"type": "Expression"
											},
											"PipelineName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"PipelineRunID": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"DataFactoryName": {
												"value": "@pipeline().DataFactory",
												"type": "Expression"
											},
											"Etl_DB_Conn_Secret": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											},
											"Color": "Red",
											"TableSchema": {
												"value": "stage_@{item().Datasourcename}",
												"type": "Expression"
											},
											"TableName": {
												"value": "@{item().Databasetablename}",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "ACT_WAIT",
									"description": "randomly wait so that we don't overwhelm the databricks scheduling queue",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "ACT_GEN_SPRC_LOG_ADB_ITEM_START",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": {
											"value": "@rand(1,10)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ACT_GEN_SPRC_LOG_ADB_ITEM_START",
									"description": "start ASQL SQL Auth to delta tables full load",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
										"storedProcedureParameters": {
											"CallingProcess": {
												"value": "Notebook",
												"type": "String"
											},
											"DataFactoryName": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExecutionMessage": {
												"value": "Started transforming table from raw to stage",
												"type": "String"
											},
											"IsEnd": {
												"value": "false",
												"type": "Boolean"
											},
											"IsError": {
												"value": "false",
												"type": "Boolean"
											},
											"IsStart": {
												"value": "true",
												"type": "Boolean"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerID": {
												"value": {
													"value": "@pipeline().TriggerId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineTriggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableName": {
												"value": {
													"value": "@{item().DatabaseTableName}",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableSchema": {
												"value": {
													"value": "stage_@{item().DataSourceName}",
													"type": "Expression"
												},
												"type": "String"
											},
											"IsInnerActivity": {
												"value": "true",
												"type": "Boolean"
											},
											"RowsCopied": {
												"value": "0",
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_SQL_AUTH",
										"type": "LinkedServiceReference",
										"parameters": {
											"LS_ASQL_SQL_AUTH_CONN_SECRET": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "ACT_GEN_SPRC_LOG_ADB_ITEM_END",
									"description": "",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ACT_ADB_NB_RAW2STAGE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
										"storedProcedureParameters": {
											"CallingProcess": {
												"value": "Notebook",
												"type": "String"
											},
											"DataFactoryName": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExecutionMessage": {
												"value": {
													"value": "Finished executing ADB Notebook to transform @{item().DataSourceName}/@{item().DatabaseTableName} to staging",
													"type": "Expression"
												},
												"type": "String"
											},
											"IsEnd": {
												"value": "true",
												"type": "Boolean"
											},
											"IsError": {
												"value": "false",
												"type": "Boolean"
											},
											"IsStart": {
												"value": "false",
												"type": "Boolean"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerID": {
												"value": {
													"value": "@pipeline().TriggerId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineTriggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableName": {
												"value": {
													"value": "@{item().Databasetablename}",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableSchema": {
												"value": {
													"value": "stage_@{item().DataSourceName}",
													"type": "Expression"
												},
												"type": "String"
											},
											"IsInnerActivity": {
												"value": "true",
												"type": "Boolean"
											},
											"RowsCopied": {
												"value": "0",
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_SQL_AUTH",
										"type": "LinkedServiceReference",
										"parameters": {
											"LS_ASQL_SQL_AUTH_CONN_SECRET": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ACT_GEN_EPIPE_ERR_NOTIFY_1",
						"description": "Notify admins that the lookup of the raw2stage notebooks failed",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ACT_GEN_LKP_TABLES",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOGMSG_AND_SENDEMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"IsError": true,
								"EmailTo": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								},
								"Subject": {
									"value": "@concat('Lookup Failure - ' , pipeline().Pipeline)",
									"type": "Expression"
								},
								"Message": {
									"value": "@concat('error code:',\nactivity('ACT_GEN_LKP_TABLES').output.error.errorCode\n, ' - Message: ',\nactivity('ACT_GEN_LKP_TABLES').output.error.message\n)",
									"type": "Expression"
								},
								"Importance": "High",
								"EmailEnabled": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"DataFactoryName": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Etl_DB_Conn_Secret": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								},
								"Color": "Red"
							}
						}
					},
					{
						"name": "ACT_GEN_EPIPE_SUCCESS_NOTIFY_1",
						"description": "email success notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SPRC_LOG_PL_END",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOGMSG_AND_SENDEMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"IsError": false,
								"EmailTo": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								},
								"Subject": {
									"value": "@concat('Success - ', pipeline().Pipeline)",
									"type": "Expression"
								},
								"Message": {
									"value": "Raw2Stage completed",
									"type": "Expression"
								},
								"Importance": "Low",
								"EmailEnabled": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"DataFactoryName": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Etl_DB_Conn_Secret": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								},
								"Color": "Green"
							}
						}
					},
					{
						"name": "ACT_GEN_SET_VAR_ERR_FLG_1",
						"description": "set error_flag variable to true",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_EPIPE_ERR_NOTIFY_1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IS_ERROR",
							"value": true
						}
					},
					{
						"name": "ACT_GEN_SPRC_LOG_PL_START",
						"description": "start raw_2_stage pipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
							"storedProcedureParameters": {
								"CallingProcess": {
									"value": {
										"value": "Start of @{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionMessage": {
									"value": "Started transforming tables from raw to stage",
									"type": "String"
								},
								"IsEnd": {
									"value": "false",
									"type": "Boolean"
								},
								"IsError": {
									"value": "false",
									"type": "Boolean"
								},
								"IsStart": {
									"value": "true",
									"type": "Boolean"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerID": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": "N/A",
									"type": "String"
								},
								"TableSchema": {
									"value": "N/A",
									"type": "String"
								},
								"IsInnerActivity": {
									"value": "false",
									"type": "Boolean"
								},
								"RowsCopied": {
									"value": "0",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_SQL_AUTH",
							"type": "LinkedServiceReference",
							"parameters": {
								"LS_ASQL_SQL_AUTH_CONN_SECRET": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ACT_GEN_SPRC_LOG_PL_END",
						"description": "end of raw_2_stage pipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ACT_ITRC_FOR_EACH_TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
							"storedProcedureParameters": {
								"CallingProcess": {
									"value": "End of Raw_2_Stage",
									"type": "String"
								},
								"DataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionMessage": {
									"value": "Finished transforming tables from raw to stage",
									"type": "String"
								},
								"IsEnd": {
									"value": "true",
									"type": "Boolean"
								},
								"IsError": {
									"value": "false",
									"type": "Boolean"
								},
								"IsStart": {
									"value": "false",
									"type": "Boolean"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerID": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": "N/A",
									"type": "String"
								},
								"TableSchema": {
									"value": "N/A",
									"type": "String"
								},
								"IsInnerActivity": {
									"value": "false",
									"type": "Boolean"
								},
								"RowsCopied": {
									"value": "0",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_SQL_AUTH",
							"type": "LinkedServiceReference",
							"parameters": {
								"LS_ASQL_SQL_AUTH_CONN_SECRET": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"EnableNotifications": {
						"type": "bool",
						"defaultValue": true
					},
					"SendEmailNotificationAddress": {
						"type": "string",
						"defaultValue": "Troy.Peckman@sdsheriff.gov"
					},
					"NotebookPath": {
						"type": "string",
						"defaultValue": "/data_engineering/Raw2Stage/Raw2Stage"
					}
				},
				"variables": {
					"ETL_ASQL_CONN_SEC": {
						"type": "String",
						"defaultValue": "sec-mdw-db-connection-string"
					},
					"IS_ERROR": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "200_RAW_2_STAGE"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-27T17:03:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_RAW_2_STAGE_COSMOSDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "run the correct dbr notebooks to promote raw data to staget data",
				"activities": [
					{
						"name": "ACT_GEN_EPIPE_ERR_NOTIFY_1",
						"description": "Notify admins that the lookup of the raw2stage notebooks failed",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ACT_RAW_2_STAGE_COSMOSDB",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOGMSG_AND_SENDEMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"IsError": true,
								"EmailTo": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								},
								"Subject": {
									"value": "@concat('Lookup Failure - ' , pipeline().Pipeline)",
									"type": "Expression"
								},
								"Message": {
									"value": "@concat('Message: '\n, activity('ACT_RAW_2_STAGE_COSMOSDB').output.runError\n)",
									"type": "Expression"
								},
								"Importance": "High",
								"EmailEnabled": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"DataFactoryName": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Etl_DB_Conn_Secret": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								},
								"Color": "Red"
							}
						}
					},
					{
						"name": "ACT_GEN_EPIPE_SUCCESS_NOTIFY_1",
						"description": "email success notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SPRC_LOG_PL_END",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOGMSG_AND_SENDEMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"IsError": false,
								"EmailTo": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								},
								"Subject": {
									"value": "@concat('Success - ', pipeline().Pipeline)",
									"type": "Expression"
								},
								"Message": {
									"value": "Raw2Stage completed",
									"type": "Expression"
								},
								"Importance": "Low",
								"EmailEnabled": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"DataFactoryName": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Etl_DB_Conn_Secret": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								},
								"Color": "Green"
							}
						}
					},
					{
						"name": "ACT_GEN_SET_VAR_ERR_FLG_1",
						"description": "set error_flag variable to true",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_EPIPE_ERR_NOTIFY_1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IS_ERROR",
							"value": true
						}
					},
					{
						"name": "ACT_GEN_SPRC_LOG_PL_START",
						"description": "start raw_2_stage pipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
							"storedProcedureParameters": {
								"CallingProcess": {
									"value": {
										"value": "Start of @{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionMessage": {
									"value": "Started transforming tables from raw to stage",
									"type": "String"
								},
								"IsEnd": {
									"value": "false",
									"type": "Boolean"
								},
								"IsError": {
									"value": "false",
									"type": "Boolean"
								},
								"IsStart": {
									"value": "true",
									"type": "Boolean"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerID": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": "N/A",
									"type": "String"
								},
								"TableSchema": {
									"value": "N/A",
									"type": "String"
								},
								"IsInnerActivity": {
									"value": "false",
									"type": "Boolean"
								},
								"RowsCopied": {
									"value": "0",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_SQL_AUTH",
							"type": "LinkedServiceReference",
							"parameters": {
								"LS_ASQL_SQL_AUTH_CONN_SECRET": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ACT_GEN_SPRC_LOG_PL_END",
						"description": "end of raw_2_stage pipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ACT_RAW_2_STAGE_COSMOSDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
							"storedProcedureParameters": {
								"CallingProcess": {
									"value": "End of Raw_2_Stage",
									"type": "String"
								},
								"DataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionMessage": {
									"value": "Finished transforming tables from raw to stage",
									"type": "String"
								},
								"IsEnd": {
									"value": "true",
									"type": "Boolean"
								},
								"IsError": {
									"value": "false",
									"type": "Boolean"
								},
								"IsStart": {
									"value": "false",
									"type": "Boolean"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerID": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": "N/A",
									"type": "String"
								},
								"TableSchema": {
									"value": "N/A",
									"type": "String"
								},
								"IsInnerActivity": {
									"value": "false",
									"type": "Boolean"
								},
								"RowsCopied": {
									"value": "0",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_SQL_AUTH",
							"type": "LinkedServiceReference",
							"parameters": {
								"LS_ASQL_SQL_AUTH_CONN_SECRET": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ACT_RAW_2_STAGE_COSMOSDB",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SPRC_LOG_PL_START",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@{pipeline().parameters.NotebookPath}\n",
								"type": "Expression"
							},
							"baseParameters": {
								"deltatable_path": "/ripastops/main/"
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ADB_SPARK_CLUSTER",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"EnableNotifications": {
						"type": "bool",
						"defaultValue": false
					},
					"SendEmailNotificationAddress": {
						"type": "string",
						"defaultValue": "Troy.Peckman@sdsheriff.gov"
					},
					"NotebookPath": {
						"type": "string",
						"defaultValue": "/data_engineering/Raw2Stage/Raw2Stage_cosmosdb"
					}
				},
				"variables": {
					"ETL_ASQL_CONN_SEC": {
						"type": "String",
						"defaultValue": "sec-mdw-db-connection-string"
					},
					"IS_ERROR": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "200_RAW_2_STAGE"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-27T17:03:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SOURCE_2_RAW_COSMOSDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline will truncate all tables and load all of the DBO tables from the ODS into HIVE",
				"activities": [
					{
						"name": "ACT_GEN_SPRC_LOG_PL_START",
						"description": "start of source_2_raw pipeline. Stored procedure that logs it.",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
							"storedProcedureParameters": {
								"CallingProcess": {
									"value": {
										"value": "Start of @{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionMessage": {
									"value": "Started copying data to delta tables",
									"type": "String"
								},
								"IsEnd": {
									"value": "false",
									"type": "Boolean"
								},
								"IsError": {
									"value": "false",
									"type": "Boolean"
								},
								"IsStart": {
									"value": "true",
									"type": "Boolean"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerID": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": "N/A",
									"type": "String"
								},
								"TableSchema": {
									"value": "N/A",
									"type": "String"
								},
								"IsInnerActivity": {
									"value": "false",
									"type": "Boolean"
								},
								"RowsCopied": {
									"value": "0",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_SQL_AUTH",
							"type": "LinkedServiceReference",
							"parameters": {
								"LS_ASQL_SQL_AUTH_CONN_SECRET": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ACT_GEN_LKP_TABLES",
						"description": "lookup tables that are enabled in metadata table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SPRC_LOG_PL_START",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[uspGetTableListing]",
								"storedProcedureParameters": {
									"DataSourceName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.DataSourceName",
											"type": "Expression"
										}
									},
									"DataSourceType": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.DataSourceType",
											"type": "Expression"
										}
									},
									"Incremental": {
										"type": "String",
										"value": "0"
									},
									"DataSourceID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.DataSourceID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_SQL_AUTH",
								"type": "DatasetReference",
								"parameters": {
									"DS_ASQL_SQL_AUTH_CONN_SECRET": {
										"value": "@variables('ETL_ASQL_CONN_SEC')",
										"type": "Expression"
									},
									"DS_DB_SCHEMA_NAME": {
										"value": "adf",
										"type": "Expression"
									},
									"DS_DB_TABLE_NAME": "DataSource"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACT_ITRC_FOR_EACH_TABLE",
						"description": "iterate through each table and perform the copy ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SET_VAR_UTC_STAMP",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACT_GEN_LKP_TABLES",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACT_GEN_SET_VAR_LOCAL_TIME",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ACT_GEN_LKP_TABLES').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 8,
							"activities": [
								{
									"name": "ACT_MT_COPY_SQL_WIN_AUTH_2_ADLS",
									"description": "copy tables to raw parquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "ACT_GEN_SPRC_LOG_ITEM_START",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.06:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "CosmosDbSqlApiSource",
											"preferredRegions": []
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false,
										"parallelCopies": 5,
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "DS_COSMOSDB",
											"type": "DatasetReference",
											"parameters": {
												"DS_DATABASETABLENAME": {
													"value": "@item().databasetablename",
													"type": "Expression"
												},
												"DS_COSMOS_DB_ACCT_URI": {
													"value": "@item().DatabaseServerName",
													"type": "Expression"
												},
												"DS_COSMOS_ACCESS_KEY_SEC": {
													"value": "@item().DatabaseUserNamePasswordSecret",
													"type": "Expression"
												},
												"DS_COSMOS_DB_NAME": {
													"value": "@item().DatabaseName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_RAW_JSON",
											"type": "DatasetReference",
											"parameters": {
												"DatasourceName": {
													"value": "@item().DatabaseName",
													"type": "Expression"
												},
												"FileName": {
													"value": "@{item().DataSourceName}-@{item().DatabaseTableName}-@{variables('UTC_TIME')}.json",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "ACT_GEN_SET_VAR_ERR_FLG_2",
									"description": "set error_flag variable to true",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ACT_GEN_EPIPE_ERR_NOTIFY_2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ERROR_FLG",
										"value": true
									}
								},
								{
									"name": "ACT_GEN_SPRC_UPDATE_LAST_EXECUTION_DATE",
									"description": "log full load finish datetime for the source table ",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ACT_ADB_NOTE_JSON_2_PARQUET",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[adf].[uspUpdateLastExecutionDate]",
										"storedProcedureParameters": {
											"DataSourceID": {
												"value": {
													"value": "@{item().DataSourceId}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_SQL_AUTH",
										"type": "LinkedServiceReference",
										"parameters": {
											"LS_ASQL_SQL_AUTH_CONN_SECRET": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "ACT_GEN_SET_VAR_ERR_FLG_3",
									"description": "set error_flag variable to true",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ACT_GEN_EPIPE_ERR_NOTIFY_3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ERROR_FLG",
										"value": true
									}
								},
								{
									"name": "ACT_GEN_SPRC_LOG_ITEM_START",
									"description": "start logging",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
										"storedProcedureParameters": {
											"CallingProcess": {
												"value": "Copy",
												"type": "String"
											},
											"DataFactoryName": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExecutionMessage": {
												"value": "Started copying data to delta tables",
												"type": "String"
											},
											"IsEnd": {
												"value": "false",
												"type": "Boolean"
											},
											"IsError": {
												"value": "false",
												"type": "Boolean"
											},
											"IsStart": {
												"value": "true",
												"type": "Boolean"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerID": {
												"value": {
													"value": "@pipeline().TriggerId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineTriggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableName": {
												"value": {
													"value": "@item().DatabaseTableName",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableSchema": {
												"value": {
													"value": "@item().DataSourceName",
													"type": "Expression"
												},
												"type": "String"
											},
											"IsInnerActivity": {
												"value": "true",
												"type": "Boolean"
											},
											"RowsCopied": {
												"value": "0",
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_SQL_AUTH",
										"type": "LinkedServiceReference",
										"parameters": {
											"LS_ASQL_SQL_AUTH_CONN_SECRET": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "ACT_GEN_SPRC_LOG_ITEM_END",
									"description": "End logging",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ACT_GEN_SPRC_UPDATE_LAST_EXECUTION_DATE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
										"storedProcedureParameters": {
											"CallingProcess": {
												"value": "Notebook",
												"type": "String"
											},
											"DataFactoryName": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExecutionMessage": {
												"value": {
													"value": "Finished copying data and executing Databricks notebook to transform @{item().DataSourceName}/@{item().DatabaseTableName}.parquet to Delta Table",
													"type": "Expression"
												},
												"type": "String"
											},
											"IsEnd": {
												"value": "true",
												"type": "Boolean"
											},
											"IsError": {
												"value": "false",
												"type": "Boolean"
											},
											"IsStart": {
												"value": "false",
												"type": "Boolean"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerID": {
												"value": {
													"value": "@pipeline().TriggerId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineTriggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableName": {
												"value": {
													"value": "@item().DatabaseTableName",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableSchema": {
												"value": {
													"value": "@item().DataSourceName",
													"type": "Expression"
												},
												"type": "String"
											},
											"IsInnerActivity": {
												"value": "true",
												"type": "Boolean"
											},
											"RowsCopied": {
												"value": {
													"value": "@{activity('ACT_MT_COPY_SQL_WIN_AUTH_2_ADLS').output.rowsCopied}",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_SQL_AUTH",
										"type": "LinkedServiceReference",
										"parameters": {
											"LS_ASQL_SQL_AUTH_CONN_SECRET": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "ACT_GEN_EPIPE_ERR_NOTIFY_2",
									"description": "notify admins the SQL to raw copy failed",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "ACT_MT_COPY_SQL_WIN_AUTH_2_ADLS",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_LOGMSG_AND_SENDEMAIL_ITEM",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"IsError": true,
											"EmailTo": {
												"value": "@pipeline().parameters.SendEmailNotificationAddress",
												"type": "Expression"
											},
											"Subject": {
												"value": "COPY FAILURE - @{pipeline().Pipeline}",
												"type": "Expression"
											},
											"Message": {
												"value": "Error Code: @{activity('ACT_MT_COPY_SQL_WIN_AUTH_2_ADLS').error.errorCode} - Message: @{activity('ACT_MT_COPY_SQL_WIN_AUTH_2_ADLS').error.message}",
												"type": "Expression"
											},
											"Importance": "High",
											"EmailEnabled": {
												"value": "@pipeline().parameters.EnableNotifications",
												"type": "Expression"
											},
											"PipelineName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"PipelineRunID": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"DataFactoryName": {
												"value": "@pipeline().DataFactory",
												"type": "Expression"
											},
											"Etl_DB_Conn_Secret": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											},
											"Color": "Red",
											"TableSchema": {
												"value": "@{item().DatabaseSchemaName}",
												"type": "Expression"
											},
											"TableName": {
												"value": "@{item().DatabaseTableName}",
												"type": "Expression"
											},
											"RowsCopied": 0
										}
									}
								},
								{
									"name": "ACT_GEN_EPIPE_ERR_NOTIFY_3",
									"description": "notify admins the SQL to raw copy failed",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "ACT_ADB_NOTE_JSON_2_PARQUET",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_LOGMSG_AND_SENDEMAIL_ITEM",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"IsError": true,
											"EmailTo": {
												"value": "@pipeline().parameters.SendEmailNotificationAddress",
												"type": "Expression"
											},
											"Subject": {
												"value": "NOTEBOOK FAILURE - @{pipeline().Pipeline}",
												"type": "Expression"
											},
											"Message": {
												"value": "Notebook - ReadJSONWriteParquet_CosmosDB - DATA FILE PATH - //@{item().DataSourceName}/@{item().DatabaseTableName}-@{variables('UTC_TIME')}.parquet Error Code:  @{activity('ACT_ADB_NOTE_JSON_2_PARQUET').error.errorCode} - Message:  @{activity('ACT_ADB_NOTE_JSON_2_PARQUET').error.message}\n\n\n",
												"type": "Expression"
											},
											"Importance": "High",
											"EmailEnabled": {
												"value": "@pipeline().parameters.EnableNotifications",
												"type": "Expression"
											},
											"PipelineName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"PipelineRunID": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"DataFactoryName": {
												"value": "@pipeline().DataFactory",
												"type": "Expression"
											},
											"Etl_DB_Conn_Secret": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											},
											"Color": "Red",
											"TableSchema": {
												"value": "@{item().DatabaseSchemaName}",
												"type": "Expression"
											},
											"TableName": {
												"value": "@{item().DatabaseTableName}",
												"type": "Expression"
											},
											"RowsCopied": {
												"value": "@{activity('ACT_MT_COPY_SQL_WIN_AUTH_2_ADLS').output.rowsCopied}",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "ACT_ADB_NOTE_JSON_2_PARQUET",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "ACT_MT_COPY_SQL_WIN_AUTH_2_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/data_engineering/Source2Raw/ReadJSONWriteParquet_Cosmos",
										"baseParameters": {
											"json_file_path": {
												"value": "/mnt/datalake/raw/@{item().DatabaseName}/@{item().DataSourceName}-@{item().DatabaseTableName}-@{variables('UTC_TIME')}.json",
												"type": "Expression"
											},
											"parquet_output_path": {
												"value": "/mnt/datalake/raw/@{item().DatabaseName}/@{item().DatabaseTableName}-@{variables('UTC_TIME')}/@{item().DataSourceName}",
												"type": "Expression"
											},
											"database_container_name": {
												"value": "@item().DatabaseTableName",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ADB_SPARK_CLUSTER",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "ACT_GEN_EPIPE_ERR_NOTIFY_1",
						"description": "notify admins the asql sql auth to raw lookup failed",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ACT_GEN_LKP_TABLES",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOGMSG_AND_SENDEMAIL_ITEM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"IsError": true,
								"EmailTo": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								},
								"Subject": {
									"value": "FAILURE: @{pipeline().Pipeline} Lookup Failure",
									"type": "Expression"
								},
								"Message": {
									"value": "@concat('Error Code:', activity('ACT_GEN_LKP_TABLES').error.errorCode, ' - Message:', activity('ACT_GEN_LKP_TABLES').error.message)",
									"type": "Expression"
								},
								"Importance": "High",
								"EmailEnabled": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"DataFactoryName": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Etl_DB_Conn_Secret": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								},
								"Color": "Red"
							}
						}
					},
					{
						"name": "ACT_GEN_SET_VAR_ERR_FLG_1",
						"description": "set error_flag variable to true",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_EPIPE_ERR_NOTIFY_1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ERROR_FLG",
							"value": true
						}
					},
					{
						"name": "ACT_GEN_SET_VAR_UTC_STAMP",
						"description": "set the UTC timestamp which will be later used as part of the downloaded filenames",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "UTC_TIME",
							"value": {
								"value": "@{utcnow('yyyyMMddTHH:mm:ss')}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_SPRC_LOG_PL_END",
						"description": "end of source_2_raw pipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ACT_ITRC_FOR_EACH_DIST_TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
							"storedProcedureParameters": {
								"CallingProcess": {
									"value": {
										"value": "End of @{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionMessage": {
									"value": "Finished copying data to delta tables",
									"type": "String"
								},
								"IsEnd": {
									"value": "true",
									"type": "Boolean"
								},
								"IsError": {
									"value": "false",
									"type": "Boolean"
								},
								"IsStart": {
									"value": "false",
									"type": "Boolean"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerID": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": "N/A",
									"type": "String"
								},
								"TableSchema": {
									"value": "N/A",
									"type": "String"
								},
								"IsInnerActivity": {
									"value": "false",
									"type": "Boolean"
								},
								"RowsCopied": {
									"value": "0",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_SQL_AUTH",
							"type": "LinkedServiceReference",
							"parameters": {
								"LS_ASQL_SQL_AUTH_CONN_SECRET": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ACT_GEN_EPIPE_SUCCESS_NOTIFY_1",
						"description": "email success notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SPRC_LOG_PL_END",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOGMSG_AND_SENDEMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"IsError": false,
								"EmailTo": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								},
								"Subject": {
									"value": "SUCCESS: @{pipeline().Pipeline}",
									"type": "Expression"
								},
								"Message": {
									"value": "SUCCESS: Source to delta tables incremental copy pipeline run has been successfully completed.",
									"type": "Expression"
								},
								"Importance": "Low",
								"EmailEnabled": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"DataFactoryName": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Etl_DB_Conn_Secret": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								},
								"Color": "Green"
							}
						}
					},
					{
						"name": "ACT_GEN_SET_VAR_LOCAL_TIME",
						"description": "set the UTC timestamp which will be later used as part of the downloaded filenames",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LOCAL_TIME",
							"value": {
								"value": "@convertTimeZone(utcnow(), 'UTC', 'Pacific Standard Time', 'yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_EXECUTE_ADD_NECESSARY_COLUMNS",
						"description": "This notebook will add the Ori code to the userprofile dataset",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ACT_ITRC_FOR_EACH_TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/data_engineering/Source2Raw/AddNecessaryColumns",
							"baseParameters": {
								"utc_time": {
									"value": "@variables('UTC_TIME')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ADB_SPARK_CLUSTER",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ACT_GEN_EPIPE_ERR_NOTIFY_4",
						"description": "notify admins the asql sql auth to raw lookup failed",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ACT_EXECUTE_ADD_NECESSARY_COLUMNS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOGMSG_AND_SENDEMAIL_ITEM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"IsError": true,
								"EmailTo": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								},
								"Subject": {
									"value": "FAILURE: @{pipeline().Pipeline} Lookup Failure",
									"type": "Expression"
								},
								"Message": {
									"value": "@concat('Error Code:', activity('ACT_EXECUTE_ADD_NECESSARY_COLUMNS').error.errorCode, ' - Message:', activity('ACT_EXECUTE_ADD_NECESSARY_COLUMNS').error.message)",
									"type": "Expression"
								},
								"Importance": "High",
								"EmailEnabled": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"DataFactoryName": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Etl_DB_Conn_Secret": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								},
								"Color": "Red"
							}
						}
					},
					{
						"name": "ACT_LKUP_DISTINCT_TABLENAME",
						"description": "Grabs the unique table names for combining parquets across multiple agencies.",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ACT_EXECUTE_ADD_NECESSARY_COLUMNS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT DatabaseTableName, \nDatabaseName\nFROM [adf].[DataSource]\nWHERE datasourcetype = 'cosmosdb' and isenabled = 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_SQL_AUTH",
								"type": "DatasetReference",
								"parameters": {
									"DS_ASQL_SQL_AUTH_CONN_SECRET": {
										"value": "@variables('ETL_ASQL_CONN_SEC')",
										"type": "Expression"
									},
									"DS_DB_SCHEMA_NAME": {
										"value": "adf",
										"type": "Expression"
									},
									"DS_DB_TABLE_NAME": "DataSource"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACT_ITRC_FOR_EACH_DIST_TABLE",
						"description": "Combine multiple sets of parquets across multiple agencies",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ACT_LKUP_DISTINCT_TABLENAME",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ACT_LKUP_DISTINCT_TABLENAME').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "ACT_COMBINE_PARQUET_FILES",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/data_engineering/Source2Raw/Combine_Parquets_for_MultiList_tables",
										"baseParameters": {
											"database_container_name": {
												"value": "@item().DatabaseTableName",
												"type": "Expression"
											},
											"parquet_output_path": {
												"value": "/mnt/datalake/raw/@{item().DatabaseName}/main",
												"type": "Expression"
											},
											"UTC_TIME": {
												"value": "@variables('UTC_TIME')",
												"type": "Expression"
											},
											"parquet_input_path": {
												"value": "/mnt/datalake/raw/@{item().DatabaseName}",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ADB_SPARK_CLUSTER",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "ACT_GEN_EPIPE_ERR_NOTIFY_5",
									"description": "notify admins the asql sql auth to raw lookup failed",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "ACT_COMBINE_PARQUET_FILES",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_LOGMSG_AND_SENDEMAIL_ITEM",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"IsError": true,
											"EmailTo": {
												"value": "@pipeline().parameters.SendEmailNotificationAddress",
												"type": "Expression"
											},
											"Subject": {
												"value": "FAILURE: @{pipeline().Pipeline} Lookup Failure",
												"type": "Expression"
											},
											"Message": {
												"value": "@concat('Error Code:', activity('ACT_COMBINE_PARQUET_FILES').error.errorCode, ' - Message:', activity('ACT_COMBINE_PARQUET_FILES').error.message)",
												"type": "Expression"
											},
											"Importance": "High",
											"EmailEnabled": {
												"value": "@pipeline().parameters.EnableNotifications",
												"type": "Expression"
											},
											"PipelineName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"PipelineRunID": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"DataFactoryName": {
												"value": "@pipeline().DataFactory",
												"type": "Expression"
											},
											"Etl_DB_Conn_Secret": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											},
											"Color": "Red"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"EnableNotifications": {
						"type": "bool",
						"defaultValue": false
					},
					"SendEmailNotificationAddress": {
						"type": "string",
						"defaultValue": "Troy.Peckman@sdsheriff.gov"
					},
					"DataSourceName": {
						"type": "string",
						"defaultValue": "-"
					},
					"DataSourceType": {
						"type": "string",
						"defaultValue": "cosmosdb"
					},
					"DataSourceID": {
						"type": "string",
						"defaultValue": "NULL"
					}
				},
				"variables": {
					"ERROR_FLG": {
						"type": "Boolean"
					},
					"SCHEMA_NAME": {
						"type": "String"
					},
					"TABLE_NAME": {
						"type": "String"
					},
					"ETL_ASQL_CONN_SEC": {
						"type": "String",
						"defaultValue": "sec-mdw-db-connection-string"
					},
					"UTC_TIME": {
						"type": "String"
					},
					"USER_NAME": {
						"type": "String"
					},
					"SECRET_NAME": {
						"type": "String"
					},
					"LOCAL_TIME": {
						"type": "String"
					}
				},
				"folder": {
					"name": "100_SOURCE_2_RAW/FULL"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-27T17:03:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SOURCE_2_RAW_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline will ingest csv files in the raw container and convert them to delta/parquet format",
				"activities": [
					{
						"name": "ACT_GEN_SPRC_LOG_PL_START",
						"description": "start of source_2_raw pipeline. Stored procedure that logs it.",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
							"storedProcedureParameters": {
								"CallingProcess": {
									"value": {
										"value": "Start of @{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionMessage": {
									"value": "Started copying data to delta tables",
									"type": "String"
								},
								"IsEnd": {
									"value": "false",
									"type": "Boolean"
								},
								"IsError": {
									"value": "false",
									"type": "Boolean"
								},
								"IsStart": {
									"value": "true",
									"type": "Boolean"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerID": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": "N/A",
									"type": "String"
								},
								"TableSchema": {
									"value": "N/A",
									"type": "String"
								},
								"IsInnerActivity": {
									"value": "false",
									"type": "Boolean"
								},
								"RowsCopied": {
									"value": "0",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_SQL_AUTH",
							"type": "LinkedServiceReference",
							"parameters": {
								"LS_ASQL_SQL_AUTH_CONN_SECRET": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ACT_GEN_LKP_TABLES",
						"description": "lookup tables that are enabled in metadata table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SPRC_LOG_PL_START",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[uspGetTableListing]",
								"storedProcedureParameters": {
									"DataSourceName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.DataSourceName",
											"type": "Expression"
										}
									},
									"DataSourceType": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.DataSourceType",
											"type": "Expression"
										}
									},
									"Incremental": {
										"type": "String",
										"value": "0"
									},
									"DataSourceID": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.DataSourceID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_SQL_AUTH",
								"type": "DatasetReference",
								"parameters": {
									"DS_ASQL_SQL_AUTH_CONN_SECRET": {
										"value": "@variables('ETL_ASQL_CONN_SEC')",
										"type": "Expression"
									},
									"DS_DB_SCHEMA_NAME": {
										"value": "adf",
										"type": "Expression"
									},
									"DS_DB_TABLE_NAME": "DataSource"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACT_ITRC_FOR_EACH_TABLE",
						"description": "iterate through each table and perform the copy ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SET_VAR_UTC_STAMP",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACT_GEN_LKP_TABLES",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ACT_GEN_SET_VAR_LOCAL_TIME",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ACT_GEN_LKP_TABLES').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 8,
							"activities": [
								{
									"name": "ACT_MT_COPY_SQL_WIN_AUTH_2_ADLS",
									"description": "copy tables to raw parquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "ACT_GEN_SPRC_LOG_ITEM_START",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.06:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"parallelCopies": 5
									},
									"inputs": [
										{
											"referenceName": "DS_ADLS_DROPZONE",
											"type": "DatasetReference",
											"parameters": {
												"DS_FILENAME": {
													"value": "@item().DataLakeEntityName",
													"type": "Expression"
												},
												"DS_FILEPATH": {
													"value": "@item().DataLakePath",
													"type": "Expression"
												},
												"DS_DLCONTAINER": {
													"value": "@item().DatalakeContainerName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_CSV",
											"type": "DatasetReference",
											"parameters": {
												"DataSourceName": {
													"value": "@item().DatasourceName",
													"type": "Expression"
												},
												"FileName": {
													"value": "@{item().DatabaseTableName}-@{variables('UTC_TIME')}.csv",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "ACT_GEN_SET_VAR_ERR_FLG_2",
									"description": "set error_flag variable to true",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ACT_GEN_EPIPE_ERR_NOTIFY_2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ERROR_FLG",
										"value": true
									}
								},
								{
									"name": "ACT_ADB_NOTE_PARQUET_2_DELTA",
									"description": "runs notebook to convert parquet to delta  table",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "ACT_MT_COPY_SQL_WIN_AUTH_2_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.01:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@pipeline().parameters.NotebookPath",
											"type": "Expression"
										},
										"baseParameters": {
											"datafile_path": {
												"value": "/@{item().DataSourceName}/@{item().DatabaseTableName}-@{variables('UTC_TIME')}.csv",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ADB_SPARK_CLUSTER",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "ACT_GEN_SPRC_UPDATE_LAST_EXECUTION_DATE",
									"description": "log full load finish datetime for the source table ",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ACT_ADB_NOTE_PARQUET_2_DELTA",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[adf].[uspUpdateLastExecutionDate]",
										"storedProcedureParameters": {
											"DataSourceID": {
												"value": {
													"value": "@{item().DataSourceId}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_SQL_AUTH",
										"type": "LinkedServiceReference",
										"parameters": {
											"LS_ASQL_SQL_AUTH_CONN_SECRET": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "ACT_GEN_SET_VAR_ERR_FLG_3",
									"description": "set error_flag variable to true",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ACT_GEN_EPIPE_ERR_NOTIFY_3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ERROR_FLG",
										"value": true
									}
								},
								{
									"name": "ACT_GEN_SPRC_LOG_ITEM_START",
									"description": "start logging",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
										"storedProcedureParameters": {
											"CallingProcess": {
												"value": "Copy",
												"type": "String"
											},
											"DataFactoryName": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExecutionMessage": {
												"value": "Started copying data to delta tables",
												"type": "String"
											},
											"IsEnd": {
												"value": "false",
												"type": "Boolean"
											},
											"IsError": {
												"value": "false",
												"type": "Boolean"
											},
											"IsStart": {
												"value": "true",
												"type": "Boolean"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerID": {
												"value": {
													"value": "@pipeline().TriggerId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineTriggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableName": {
												"value": {
													"value": "@item().DatabaseTableName",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableSchema": {
												"value": {
													"value": "@item().DataSourceName",
													"type": "Expression"
												},
												"type": "String"
											},
											"IsInnerActivity": {
												"value": "true",
												"type": "Boolean"
											},
											"RowsCopied": {
												"value": "0",
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_SQL_AUTH",
										"type": "LinkedServiceReference",
										"parameters": {
											"LS_ASQL_SQL_AUTH_CONN_SECRET": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "ACT_GEN_SPRC_LOG_ITEM_END",
									"description": "End logging",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ACT_GEN_SPRC_UPDATE_LAST_EXECUTION_DATE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
										"storedProcedureParameters": {
											"CallingProcess": {
												"value": "Notebook",
												"type": "String"
											},
											"DataFactoryName": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExecutionMessage": {
												"value": {
													"value": "Finished copying data and executing Databricks notebook to transform @{item().DataSourceName}/@{item().DatabaseTableName}.parquet to Delta Table",
													"type": "Expression"
												},
												"type": "String"
											},
											"IsEnd": {
												"value": "true",
												"type": "Boolean"
											},
											"IsError": {
												"value": "false",
												"type": "Boolean"
											},
											"IsStart": {
												"value": "false",
												"type": "Boolean"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerID": {
												"value": {
													"value": "@pipeline().TriggerId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineTriggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableName": {
												"value": {
													"value": "@item().DatabaseTableName",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableSchema": {
												"value": {
													"value": "@item().DataSourceName",
													"type": "Expression"
												},
												"type": "String"
											},
											"IsInnerActivity": {
												"value": "true",
												"type": "Boolean"
											},
											"RowsCopied": {
												"value": {
													"value": "0",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_SQL_AUTH",
										"type": "LinkedServiceReference",
										"parameters": {
											"LS_ASQL_SQL_AUTH_CONN_SECRET": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "ACT_GEN_EPIPE_ERR_NOTIFY_2",
									"description": "notify admins the SQL to raw copy failed",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "ACT_MT_COPY_SQL_WIN_AUTH_2_ADLS",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_LOGMSG_AND_SENDEMAIL_ITEM",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"IsError": true,
											"EmailTo": {
												"value": "@pipeline().parameters.SendEmailNotificationAddress",
												"type": "Expression"
											},
											"Subject": {
												"value": "COPY FAILURE - @{pipeline().Pipeline}",
												"type": "Expression"
											},
											"Message": {
												"value": "Error Code: @{activity('ACT_MT_COPY_SQL_WIN_AUTH_2_ADLS').error.errorCode} - Message: @{activity('ACT_MT_COPY_SQL_WIN_AUTH_2_ADLS').error.message}",
												"type": "Expression"
											},
											"Importance": "High",
											"EmailEnabled": {
												"value": "@pipeline().parameters.EnableNotifications",
												"type": "Expression"
											},
											"PipelineName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"PipelineRunID": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"DataFactoryName": {
												"value": "@pipeline().DataFactory",
												"type": "Expression"
											},
											"Etl_DB_Conn_Secret": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											},
											"Color": "Red",
											"TableSchema": {
												"value": "@{item().DatabaseSchemaName}",
												"type": "Expression"
											},
											"TableName": {
												"value": "@{item().DatabaseTableName}",
												"type": "Expression"
											},
											"RowsCopied": 0
										}
									}
								},
								{
									"name": "ACT_GEN_EPIPE_ERR_NOTIFY_3",
									"description": "notify admins the SQL to raw copy failed",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "ACT_ADB_NOTE_PARQUET_2_DELTA",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_LOGMSG_AND_SENDEMAIL_ITEM",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"IsError": true,
											"EmailTo": {
												"value": "@pipeline().parameters.SendEmailNotificationAddress",
												"type": "Expression"
											},
											"Subject": {
												"value": "NOTEBOOK FAILURE - @{pipeline().Pipeline}",
												"type": "Expression"
											},
											"Message": {
												"value": "Notebook - @{pipeline().parameters.NotebookPath}  DATA FILE PATH - //@{item().DataSourceName}/@{item().DatabaseTableName}-@{variables('UTC_TIME')}.parquet Error Code:  @{activity('ACT_ADB_NOTE_PARQUET_2_DELTA').error.errorCode} - Message:  @{activity('ACT_ADB_NOTE_PARQUET_2_DELTA').error.message}\n\n\n",
												"type": "Expression"
											},
											"Importance": "High",
											"EmailEnabled": {
												"value": "@pipeline().parameters.EnableNotifications",
												"type": "Expression"
											},
											"PipelineName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"PipelineRunID": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"DataFactoryName": {
												"value": "@pipeline().DataFactory",
												"type": "Expression"
											},
											"Etl_DB_Conn_Secret": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											},
											"Color": "Red",
											"TableSchema": {
												"value": "@{item().DatabaseSchemaName}",
												"type": "Expression"
											},
											"TableName": {
												"value": "@{item().DatabaseTableName}",
												"type": "Expression"
											},
											"RowsCopied": {
												"value": "@{activity('ACT_MT_COPY_SQL_WIN_AUTH_2_ADLS').output.rowsCopied}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ACT_GEN_EPIPE_ERR_NOTIFY_1",
						"description": "notify admins the asql sql auth to raw lookup failed",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ACT_GEN_LKP_TABLES",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOGMSG_AND_SENDEMAIL_ITEM",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"IsError": true,
								"EmailTo": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								},
								"Subject": {
									"value": "FAILURE: @{pipeline().Pipeline} Lookup Failure",
									"type": "Expression"
								},
								"Message": {
									"value": "@concat('Error Code:', activity('ACT_GEN_LKP_TABLES').error.errorCode, ' - Message:', activity('ACT_GEN_LKP_TABLES').error.message)",
									"type": "Expression"
								},
								"Importance": "High",
								"EmailEnabled": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"DataFactoryName": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Etl_DB_Conn_Secret": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								},
								"Color": "Red"
							}
						}
					},
					{
						"name": "ACT_GEN_SET_VAR_ERR_FLG_1",
						"description": "set error_flag variable to true",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_EPIPE_ERR_NOTIFY_1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ERROR_FLG",
							"value": true
						}
					},
					{
						"name": "ACT_GEN_SET_VAR_UTC_STAMP",
						"description": "set the UTC timestamp which will be later used as part of the downloaded filenames",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "UTC_TIME",
							"value": {
								"value": "@{utcnow('yyyyMMddTHH:mm:ss')}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ACT_GEN_SPRC_LOG_PL_END",
						"description": "end of source_2_raw pipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ACT_ITRC_FOR_EACH_TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
							"storedProcedureParameters": {
								"CallingProcess": {
									"value": {
										"value": "End of @{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionMessage": {
									"value": "Finished copying data to delta tables",
									"type": "String"
								},
								"IsEnd": {
									"value": "true",
									"type": "Boolean"
								},
								"IsError": {
									"value": "false",
									"type": "Boolean"
								},
								"IsStart": {
									"value": "false",
									"type": "Boolean"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerID": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": "N/A",
									"type": "String"
								},
								"TableSchema": {
									"value": "N/A",
									"type": "String"
								},
								"IsInnerActivity": {
									"value": "false",
									"type": "Boolean"
								},
								"RowsCopied": {
									"value": "0",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_SQL_AUTH",
							"type": "LinkedServiceReference",
							"parameters": {
								"LS_ASQL_SQL_AUTH_CONN_SECRET": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ACT_GEN_EPIPE_SUCCESS_NOTIFY_1",
						"description": "email success notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SPRC_LOG_PL_END",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOGMSG_AND_SENDEMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"IsError": false,
								"EmailTo": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								},
								"Subject": {
									"value": "SUCCESS: @{pipeline().Pipeline}",
									"type": "Expression"
								},
								"Message": {
									"value": "SUCCESS: Source to delta tables incremental copy pipeline run has been successfully completed.",
									"type": "Expression"
								},
								"Importance": "Low",
								"EmailEnabled": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"DataFactoryName": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Etl_DB_Conn_Secret": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								},
								"Color": "Green"
							}
						}
					},
					{
						"name": "ACT_GEN_SET_VAR_LOCAL_TIME",
						"description": "set the UTC timestamp which will be later used as part of the downloaded filenames",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LOCAL_TIME",
							"value": {
								"value": "@convertTimeZone(utcnow(), 'UTC', 'Pacific Standard Time', 'yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"EnableNotifications": {
						"type": "bool",
						"defaultValue": false
					},
					"SendEmailNotificationAddress": {
						"type": "string",
						"defaultValue": "Troy.Peckman@sdsheriff.gov"
					},
					"NotebookPath": {
						"type": "string",
						"defaultValue": "/data_engineering/Source2Raw/Source2RawFullLoad"
					},
					"DataSourceName": {
						"type": "string",
						"defaultValue": "static"
					},
					"DataSourceType": {
						"type": "string",
						"defaultValue": "csv"
					},
					"DataSourceID": {
						"type": "string",
						"defaultValue": "NULL"
					}
				},
				"variables": {
					"ERROR_FLG": {
						"type": "Boolean"
					},
					"SCHEMA_NAME": {
						"type": "String"
					},
					"TABLE_NAME": {
						"type": "String"
					},
					"ETL_ASQL_CONN_SEC": {
						"type": "String",
						"defaultValue": "sec-mdw-db-connection-string"
					},
					"UTC_TIME": {
						"type": "String"
					},
					"USER_NAME": {
						"type": "String"
					},
					"SECRET_NAME": {
						"type": "String"
					},
					"LOCAL_TIME": {
						"type": "String"
					}
				},
				"folder": {
					"name": "100_SOURCE_2_RAW/FULL"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-27T17:03:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_STAGE_2_MDW_CHILD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "run the correct dbr notebooks to promote raw data to staget data",
				"activities": [
					{
						"name": "ACT_GEN_LKP_TABLES",
						"description": "Lookup the raw2stage notebooks using the auditing metadata table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SPRC_LOG_PL_START",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 5,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select destinationname as notebookname, targetTable, max(level)  as level\nfrom [adf].[vwProcessingDependency]\ngroup by destinationname, targetTable\nhaving max(level) =  ',pipeline().parameters.Level_ID)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_SQL_AUTH",
								"type": "DatasetReference",
								"parameters": {
									"DS_ASQL_SQL_AUTH_CONN_SECRET": {
										"value": "@variables('ETL_ASQL_CONN_SEC')",
										"type": "Expression"
									},
									"DS_DB_SCHEMA_NAME": {
										"value": "adf",
										"type": "Expression"
									},
									"DS_DB_TABLE_NAME": "DataSource"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACT_ITRC_FOR_EACH_TABLE",
						"description": "Iterate through each item and perform the copy ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ACT_GEN_LKP_TABLES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ACT_GEN_LKP_TABLES').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 8,
							"activities": [
								{
									"name": "ACT_ADB_NB_RAW2STAGE",
									"description": "Run RAW2STAGE notebook",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "ACT_WAIT",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "1.10:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@{pipeline().parameters.NotebookPath}@{item().notebookname}\n",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ADB_SPARK_CLUSTER",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "ACT_GEN_SET_VAR_ERR_FLG_3",
									"description": "set error_flag variable to true",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ACT_GEN_EPIPE_ERR_NOTIFY_3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "IS_ERROR",
										"value": true
									}
								},
								{
									"name": "ACT_GEN_EPIPE_ERR_NOTIFY_3",
									"description": "Notify admins raw2stage nb failed",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "ACT_ADB_NB_RAW2STAGE",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_LOGMSG_AND_SENDEMAIL_ITEM",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"IsError": true,
											"EmailTo": {
												"value": "@pipeline().parameters.SendEmailNotificationAddress",
												"type": "Expression"
											},
											"Subject": {
												"value": "@concat('FAILURE: Notebook Failure -  ', pipeline().Pipeline, ' ',item().datasourcename, '.', item().databasetablename)",
												"type": "Expression"
											},
											"Message": {
												"value": "@concat('Notebook - ', pipeline().parameters.NotebookPath,   item().datasourcename, '/', item().databasetablename, ' Error Code:', activity('ACT_ADB_NB_RAW2STAGE').error.errorCode, ' - Message:', activity('ACT_ADB_NB_RAW2STAGE').error.message)",
												"type": "Expression"
											},
											"Importance": "High",
											"EmailEnabled": {
												"value": "@pipeline().parameters.EnableNotifications",
												"type": "Expression"
											},
											"PipelineName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"PipelineRunID": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"DataFactoryName": {
												"value": "@pipeline().DataFactory",
												"type": "Expression"
											},
											"Etl_DB_Conn_Secret": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											},
											"Color": "Red",
											"TableSchema": {
												"value": "'NA'",
												"type": "Expression"
											},
											"TableName": {
												"value": "'NA'",
												"type": "Expression"
											},
											"RowsCopied": 0
										}
									}
								},
								{
									"name": "ACT_WAIT",
									"description": "randomly wait so that we don't overwhelm the databricks scheduling queue",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "ACT_GEN_SPRC_LOG_ADB_ITEM_START",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": {
											"value": "@rand(1,10)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ACT_GEN_SPRC_LOG_ADB_ITEM_START",
									"description": "start ASQL SQL Auth to delta tables full load",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
										"storedProcedureParameters": {
											"CallingProcess": {
												"value": "Notebook",
												"type": "String"
											},
											"DataFactoryName": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExecutionMessage": {
												"value": "Started transforming table from stage to MDW",
												"type": "String"
											},
											"IsEnd": {
												"value": "false",
												"type": "Boolean"
											},
											"IsError": {
												"value": "false",
												"type": "Boolean"
											},
											"IsStart": {
												"value": "true",
												"type": "Boolean"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerID": {
												"value": {
													"value": "@pipeline().TriggerId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineTriggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableName": {
												"value": {
													"value": "@{item().targetTable}",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableSchema": {
												"value": "N/A",
												"type": "String"
											},
											"IsInnerActivity": {
												"value": "true",
												"type": "Boolean"
											},
											"RowsCopied": {
												"value": "0",
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_SQL_AUTH",
										"type": "LinkedServiceReference",
										"parameters": {
											"LS_ASQL_SQL_AUTH_CONN_SECRET": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "ACT_GEN_SPRC_LOG_ADB_ITEM_END",
									"description": "",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ACT_ADB_NB_RAW2STAGE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
										"storedProcedureParameters": {
											"CallingProcess": {
												"value": "Notebook",
												"type": "String"
											},
											"DataFactoryName": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExecutionMessage": {
												"value": {
													"value": "Finished executing ADB Notebook to transform @{item().notebookName} to MDW",
													"type": "Expression"
												},
												"type": "String"
											},
											"IsEnd": {
												"value": "true",
												"type": "Boolean"
											},
											"IsError": {
												"value": "false",
												"type": "Boolean"
											},
											"IsStart": {
												"value": "false",
												"type": "Boolean"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerID": {
												"value": {
													"value": "@pipeline().TriggerId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineTriggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableName": {
												"value": {
													"value": "@{item().targetTable}",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableSchema": {
												"value": "N/A",
												"type": "String"
											},
											"IsInnerActivity": {
												"value": "true",
												"type": "Boolean"
											},
											"RowsCopied": {
												"value": "0",
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_SQL_AUTH",
										"type": "LinkedServiceReference",
										"parameters": {
											"LS_ASQL_SQL_AUTH_CONN_SECRET": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ACT_GEN_EPIPE_ERR_NOTIFY_1",
						"description": "Notify admins that the lookup of the raw2stage notebooks failed",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ACT_GEN_LKP_TABLES",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOGMSG_AND_SENDEMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"IsError": true,
								"EmailTo": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								},
								"Subject": {
									"value": "@concat('FAILURE - ' , pipeline().Pipeline)",
									"type": "Expression"
								},
								"Message": {
									"value": "@concat('error code:',\nactivity('ACT_GEN_LKP_TABLES').output.error.errorCode\n, ' - Message: ',\nactivity('ACT_GEN_LKP_TABLES').output.error.message\n)",
									"type": "Expression"
								},
								"Importance": "High",
								"EmailEnabled": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"DataFactoryName": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Etl_DB_Conn_Secret": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								},
								"Color": "Red"
							}
						}
					},
					{
						"name": "ACT_GEN_EPIPE_SUCCESS_NOTIFY_1",
						"description": "email success notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SPRC_LOG_PL_END",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOGMSG_AND_SENDEMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"IsError": false,
								"EmailTo": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								},
								"Subject": {
									"value": "@concat('SUCCESS - ', pipeline().Pipeline)",
									"type": "Expression"
								},
								"Message": {
									"value": "Stage2MDW Completed\n",
									"type": "Expression"
								},
								"Importance": "Low",
								"EmailEnabled": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"DataFactoryName": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Etl_DB_Conn_Secret": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								},
								"Color": "Green"
							}
						}
					},
					{
						"name": "ACT_GEN_SET_VAR_ERR_FLG_1",
						"description": "set error_flag variable to true",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_EPIPE_ERR_NOTIFY_1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IS_ERROR",
							"value": true
						}
					},
					{
						"name": "ACT_GEN_SPRC_LOG_PL_START",
						"description": "start raw_2_stage pipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
							"storedProcedureParameters": {
								"CallingProcess": {
									"value": "Start of Raw_2_Stage",
									"type": "String"
								},
								"DataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionMessage": {
									"value": "Started transforming tables from raw to stage",
									"type": "String"
								},
								"IsEnd": {
									"value": "false",
									"type": "Boolean"
								},
								"IsError": {
									"value": "false",
									"type": "Boolean"
								},
								"IsStart": {
									"value": "true",
									"type": "Boolean"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerID": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": "N/A",
									"type": "String"
								},
								"TableSchema": {
									"value": "N/A",
									"type": "String"
								},
								"IsInnerActivity": {
									"value": "false",
									"type": "Boolean"
								},
								"RowsCopied": {
									"value": "0",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_SQL_AUTH",
							"type": "LinkedServiceReference",
							"parameters": {
								"LS_ASQL_SQL_AUTH_CONN_SECRET": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ACT_GEN_SPRC_LOG_PL_END",
						"description": "end of raw_2_stage pipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ACT_ITRC_FOR_EACH_TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
							"storedProcedureParameters": {
								"CallingProcess": {
									"value": "End of Raw_2_Stage",
									"type": "String"
								},
								"DataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionMessage": {
									"value": "Finished transforming tables from raw to stage",
									"type": "String"
								},
								"IsEnd": {
									"value": "true",
									"type": "Boolean"
								},
								"IsError": {
									"value": "false",
									"type": "Boolean"
								},
								"IsStart": {
									"value": "false",
									"type": "Boolean"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerID": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": "N/A",
									"type": "String"
								},
								"TableSchema": {
									"value": "N/A",
									"type": "String"
								},
								"IsInnerActivity": {
									"value": "false",
									"type": "Boolean"
								},
								"RowsCopied": {
									"value": "0",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_SQL_AUTH",
							"type": "LinkedServiceReference",
							"parameters": {
								"LS_ASQL_SQL_AUTH_CONN_SECRET": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"EnableNotifications": {
						"type": "bool",
						"defaultValue": true
					},
					"SendEmailNotificationAddress": {
						"type": "string",
						"defaultValue": "brian.rotich@insight.com"
					},
					"NotebookPath": {
						"type": "string",
						"defaultValue": "/data_engineering"
					},
					"Level_ID": {
						"type": "string",
						"defaultValue": "0"
					}
				},
				"variables": {
					"ETL_ASQL_CONN_SEC": {
						"type": "String",
						"defaultValue": "sec-mdw-db-connection-string"
					},
					"IS_ERROR": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "300_STAGE_2_MDW"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-14T14:26:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_STAGE_2_MDW_PARENT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "run the correct dbr notebooks to promote raw data to staget data",
				"activities": [
					{
						"name": "ACT_GEN_EPIPE_ERR_NOTIFY_1",
						"description": "Notify admins that the lookup of the raw2stage notebooks failed",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ACT_GEN_LKP_TABLES",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOGMSG_AND_SENDEMAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"IsError": true,
								"EmailTo": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								},
								"Subject": {
									"value": "@concat('FAILURE - ' , pipeline().Pipeline)",
									"type": "Expression"
								},
								"Message": {
									"value": "@concat('error code:',\nactivity('ACT_GEN_LKP_TABLES').output.error.errorCode\n, ' - Message: ',\nactivity('ACT_GEN_LKP_TABLES').output.error.message\n)",
									"type": "Expression"
								},
								"Importance": "High",
								"EmailEnabled": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"DataFactoryName": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Etl_DB_Conn_Secret": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								},
								"Color": "Red"
							}
						}
					},
					{
						"name": "ACT_GEN_SET_VAR_ERR_FLG_1",
						"description": "set error_flag variable to true",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ACT_GEN_EPIPE_ERR_NOTIFY_1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "IS_ERROR",
							"value": true
						}
					},
					{
						"name": "ACT_GEN_SPRC_LOG_PL_START",
						"description": "start raw_2_stage pipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
							"storedProcedureParameters": {
								"CallingProcess": {
									"value": "Start of Raw_2_Stage",
									"type": "String"
								},
								"DataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionMessage": {
									"value": "Started transforming tables from raw to stage",
									"type": "String"
								},
								"IsEnd": {
									"value": "false",
									"type": "Boolean"
								},
								"IsError": {
									"value": "false",
									"type": "Boolean"
								},
								"IsStart": {
									"value": "true",
									"type": "Boolean"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerID": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": "N/A",
									"type": "String"
								},
								"TableSchema": {
									"value": "N/A",
									"type": "String"
								},
								"IsInnerActivity": {
									"value": "false",
									"type": "Boolean"
								},
								"RowsCopied": {
									"value": "0",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_SQL_AUTH",
							"type": "LinkedServiceReference",
							"parameters": {
								"LS_ASQL_SQL_AUTH_CONN_SECRET": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ACT_GEN_SPRC_LOG_PL_END",
						"description": "end of raw_2_stage pipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ACT_ITRC_FOR_EACH_TABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:05:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
							"storedProcedureParameters": {
								"CallingProcess": {
									"value": "End of Stage_2_MDW",
									"type": "String"
								},
								"DataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionMessage": {
									"value": "Finished transforming tables from stage to MDW",
									"type": "String"
								},
								"IsEnd": {
									"value": "true",
									"type": "Boolean"
								},
								"IsError": {
									"value": "false",
									"type": "Boolean"
								},
								"IsStart": {
									"value": "false",
									"type": "Boolean"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerID": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineTriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineTriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": "N/A",
									"type": "String"
								},
								"TableSchema": {
									"value": "N/A",
									"type": "String"
								},
								"IsInnerActivity": {
									"value": "false",
									"type": "Boolean"
								},
								"RowsCopied": {
									"value": "0",
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL_SQL_AUTH",
							"type": "LinkedServiceReference",
							"parameters": {
								"LS_ASQL_SQL_AUTH_CONN_SECRET": {
									"value": "@variables('ETL_ASQL_CONN_SEC')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ACT_GEN_LKP_TABLES",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ACT_GEN_SPRC_LOG_PL_START",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select level\nfrom [adf].[vwProcessingDependency]\ngroup by level\norder by level asc",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_SQL_AUTH",
								"type": "DatasetReference",
								"parameters": {
									"DS_ASQL_SQL_AUTH_CONN_SECRET": "@variables('ETL_ASQL_CONN_SEC')",
									"DS_DB_SCHEMA_NAME": "adf",
									"DS_DB_TABLE_NAME": "vwProcessingDependency"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ACT_ITRC_FOR_EACH_TABLE",
						"description": "Iterate through each item and perform the copy ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ACT_GEN_LKP_TABLES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ACT_GEN_LKP_TABLES').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "ACT_GEN_SET_VAR_ERR_FLG_3",
									"description": "set error_flag variable to true",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ACT_GEN_EPIPE_ERR_NOTIFY_3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "IS_ERROR",
										"value": true
									}
								},
								{
									"name": "ACT_GEN_EPIPE_ERR_NOTIFY_3",
									"description": "Notify admins raw2stage nb failed",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "ACT_GEN_EPIPE_STAGE2MDW_CHILD",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_LOGMSG_AND_SENDEMAIL_ITEM",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"IsError": true,
											"EmailTo": {
												"value": "@pipeline().parameters.SendEmailNotificationAddress",
												"type": "Expression"
											},
											"Subject": {
												"value": "@concat('FAILURE: Notebook Failure -  ', pipeline().Pipeline, ' ',item().datasourcename, '.', item().databasetablename)",
												"type": "Expression"
											},
											"Message": {
												"value": "@concat('Notebook - ', pipeline().parameters.NotebookPath, '/', item().targettable, ' Error Code:', activity('ACT_GEN_EPIPE_STAGE2MDW_CHILD').error.errorCode, ' - Message:', activity('ACT_GEN_EPIPE_STAGE2MDW_CHILD').error.message)",
												"type": "Expression"
											},
											"Importance": "High",
											"EmailEnabled": {
												"value": "@pipeline().parameters.EnableNotifications",
												"type": "Expression"
											},
											"PipelineName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"PipelineRunID": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"DataFactoryName": {
												"value": "@pipeline().DataFactory",
												"type": "Expression"
											},
											"Etl_DB_Conn_Secret": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											},
											"Color": "Red",
											"TableSchema": {
												"value": "'NA'",
												"type": "Expression"
											},
											"TableName": {
												"value": "'NA'",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "ACT_GEN_SPRC_LOG_ITEM_START",
									"description": "start ASQL SQL Auth to delta tables full load",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
										"storedProcedureParameters": {
											"CallingProcess": {
												"value": "Pipeline",
												"type": "String"
											},
											"DataFactoryName": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExecutionMessage": {
												"value": "Started executing child pipeline per level id",
												"type": "String"
											},
											"IsEnd": {
												"value": "false",
												"type": "Boolean"
											},
											"IsError": {
												"value": "false",
												"type": "Boolean"
											},
											"IsStart": {
												"value": "true",
												"type": "Boolean"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerID": {
												"value": {
													"value": "@pipeline().TriggerId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineTriggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableName": {
												"value": {
													"value": "N/A",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableSchema": {
												"value": {
													"value": "N/A",
													"type": "Expression"
												},
												"type": "String"
											},
											"IsInnerActivity": {
												"value": "true",
												"type": "Boolean"
											},
											"RowsCopied": {
												"value": "0",
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_SQL_AUTH",
										"type": "LinkedServiceReference",
										"parameters": {
											"LS_ASQL_SQL_AUTH_CONN_SECRET": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "ACT_GEN_SPRC_LOG_ADB_ITEM_END",
									"description": "",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ACT_GEN_EPIPE_STAGE2MDW_CHILD",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[adf].[uspLogExecutionMessage]",
										"storedProcedureParameters": {
											"CallingProcess": {
												"value": "Pipeline",
												"type": "String"
											},
											"DataFactoryName": {
												"value": {
													"value": "@pipeline().DataFactory",
													"type": "Expression"
												},
												"type": "String"
											},
											"ExecutionMessage": {
												"value": {
													"value": "Finished executing pipeline for level id for level @{item().level} to MDW",
													"type": "Expression"
												},
												"type": "String"
											},
											"IsEnd": {
												"value": "true",
												"type": "Boolean"
											},
											"IsError": {
												"value": "false",
												"type": "Boolean"
											},
											"IsStart": {
												"value": "false",
												"type": "Boolean"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerID": {
												"value": {
													"value": "@pipeline().TriggerId",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerName": {
												"value": {
													"value": "@pipeline().TriggerName",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineTriggerTime": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineTriggerType": {
												"value": {
													"value": "@pipeline().TriggerType",
													"type": "Expression"
												},
												"type": "String"
											},
											"TableName": {
												"value": "N/A",
												"type": "String"
											},
											"TableSchema": {
												"value": "N/A",
												"type": "String"
											},
											"IsInnerActivity": {
												"value": "true",
												"type": "Boolean"
											},
											"RowsCopied": {
												"value": "0",
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_ASQL_SQL_AUTH",
										"type": "LinkedServiceReference",
										"parameters": {
											"LS_ASQL_SQL_AUTH_CONN_SECRET": {
												"value": "@variables('ETL_ASQL_CONN_SEC')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "ACT_GEN_EPIPE_STAGE2MDW_CHILD",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "ACT_GEN_SPRC_LOG_ITEM_START",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_STAGE_2_MDW_CHILD",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EnableNotifications": true,
											"SendEmailNotificationAddress": "brian.rotich@insight.com",
											"NotebookPath": "/data_engineering",
											"Level_ID": {
												"value": "@{item().level}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"EnableNotifications": {
						"type": "bool",
						"defaultValue": true
					},
					"SendEmailNotificationAddress": {
						"type": "string",
						"defaultValue": "brian.rotich@insight.com"
					},
					"NotebookPath": {
						"type": "string",
						"defaultValue": "/data_engineering"
					}
				},
				"variables": {
					"ETL_ASQL_CONN_SEC": {
						"type": "String",
						"defaultValue": "sec-mdw-db-connection-string"
					},
					"IS_ERROR": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "300_STAGE_2_MDW"
				},
				"annotations": [],
				"lastPublishTime": "2021-09-14T14:26:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_STAGE_2_MDW_CHILD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SOURCE_2_AAS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_RAW_2_STAGE_COSMOSDB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_SOURCE_2_RAW_CSV",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_SOURCE_2_RAW_COSMOSDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_RAW_2_STAGE_COSMOSDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EnableNotifications": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"SendEmailNotificationAddress": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								},
								"NotebookPath": "/data_engineering/Raw2Stage/Raw2Stage_cosmosdb"
							}
						}
					},
					{
						"name": "PL_MDW_2_ASQL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_STAGE_2_MDW",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MDW_2_ASQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EnableNotifications": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"SendEmailNotificationAddress": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL_ASQL_2_AAS_RIPAMODEL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_MDW_2_ASQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PROCESS_AAS_RIPAMODEL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EnableNotifications": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"SendEmailNotificationAddress": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL_SOURCE_2_RAW_COSMOSDB",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SOURCE_2_RAW_COSMOSDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EnableNotifications": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"SendEmailNotificationAddress": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								},
								"DataSourceName": "-",
								"DataSourceType": "cosmosdb",
								"DataSourceID": "NULL"
							}
						}
					},
					{
						"name": "PL_STAGE_2_MDW",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_RAW_2_STAGE_COSMOSDB",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "PL_RAW_2_STAGE",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_STAGE_2_MDW_PARENT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EnableNotifications": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"SendEmailNotificationAddress": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL_RAW_2_STAGE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_SOURCE_2_RAW_CSV",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_SOURCE_2_RAW_COSMOSDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_RAW_2_STAGE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EnableNotifications": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"SendEmailNotificationAddress": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								},
								"NotebookPath": "/data_engineering/Raw2Stage/Raw2Stage"
							}
						}
					},
					{
						"name": "PL_SOURCE_2_RAW_CSV",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SOURCE_2_RAW_CSV",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EnableNotifications": {
									"value": "@pipeline().parameters.EnableNotifications",
									"type": "Expression"
								},
								"SendEmailNotificationAddress": {
									"value": "@pipeline().parameters.SendEmailNotificationAddress",
									"type": "Expression"
								},
								"NotebookPath": "/data_engineering/Source2Raw/Source2RawFullLoad",
								"DataSourceName": "static",
								"DataSourceType": "csv",
								"DataSourceID": "NULL"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"EnableNotifications": {
						"type": "string",
						"defaultValue": "true"
					},
					"SendEmailNotificationAddress": {
						"type": "string",
						"defaultValue": "Troy.Peckman@sdsheriff.gov"
					}
				},
				"folder": {
					"name": "001_SCHEDULED_PIPELINES"
				},
				"annotations": [],
				"lastPublishTime": "2022-06-27T17:03:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_RAW_2_STAGE_COSMOSDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PROCESS_AAS_RIPAMODEL')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SOURCE_2_RAW_COSMOSDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_STAGE_2_MDW_PARENT')]",
				"[concat(variables('factoryId'), '/pipelines/PL_RAW_2_STAGE')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SOURCE_2_RAW_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily Run')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_SOURCE_2_AAS",
							"type": "PipelineReference"
						},
						"parameters": {
							"EnableNotifications": "[parameters('Daily Run_properties_PL_SOURCE_2_AAS_parameters_EnableNotifications')]",
							"SendEmailNotificationAddress": "[parameters('Daily Run_properties_PL_SOURCE_2_AAS_parameters_SendEmailNotificationAddress')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-10-05T19:06:00",
						"timeZone": "Pacific Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								19
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_SOURCE_2_AAS')]"
			]
		}
	]
}